/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cnpm;

import static cnpm.Connecting.Connect;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.System.Logger;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author USER
 */
public class updateBrandCart extends javax.swing.JPanel {

    boolean check;

    public boolean isCheck() {
        return check;
    }

    public void setCheck(boolean check) {
        this.check = check;
    }
    String everything;

    public String getEverything() {
        return everything;
    }

    public void setEverything(String everything) {
        this.everything = everything;
    }
    /**
     * Creates new form BrandCart
     */
    public updateBrandCart() {
        initComponents();
        setSize(750,500);
                tbBrand.getTableHeader().setFont(new Font("DialogInput",Font.BOLD,14));
        tbBrand.getTableHeader().setOpaque(false);
        tbBrand.getTableHeader().setBackground(new Color(204, 204, 255));
        lbErrorNameBrandEmpty.setVisible(false);
        lbErrorExisting.setVisible(false);
        lbErrorIDEmpty.setVisible(false);
        lbErrorNameBrand.setVisible(false);
        lbErrorlID.setVisible(false);
        btUpdating.setVisible(false);
        lbUpdating.setVisible(false);
        lbDelete.setVisible(false);
        btDelete.setVisible(false);
        getInforBrand();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tbBrand = new javax.swing.JTable();
        lbSearching = new javax.swing.JLabel();
        txtSearchingBrand = new javax.swing.JTextField();
        btAddnew = new javax.swing.JButton();
        panelForm = new javax.swing.JPanel();
        txtBrandID = new javax.swing.JTextField();
        txtNameBrand = new javax.swing.JTextField();
        lbUpdating = new javax.swing.JLabel();
        btUpdating = new javax.swing.JButton();
        lbDelete = new javax.swing.JLabel();
        btDelete = new javax.swing.JButton();
        lbAdding = new javax.swing.JLabel();
        btAdding = new javax.swing.JButton();
        lbErrorIDEmpty = new javax.swing.JLabel();
        lbErrorlID = new javax.swing.JLabel();
        lbErrorNameBrandEmpty = new javax.swing.JLabel();
        lbErrorNameBrand = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbErrorExisting = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setPreferredSize(new java.awt.Dimension(0, 403));

        tbBrand.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tbBrand.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "BRAND"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbBrand.setRowHeight(24);
        tbBrand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBrandMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbBrand);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 390, 400));

        lbSearching.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\search_30px.png")); // NOI18N
        add(lbSearching, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 41, 40));

        txtSearchingBrand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchingBrandKeyReleased(evt);
            }
        });
        add(txtSearchingBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 240, 41));

        btAddnew.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\Image\\icons8_plus_min1111111us_32.png")); // NOI18N
        btAddnew.setText("ADD NEW");
        btAddnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddnewActionPerformed(evt);
            }
        });
        add(btAddnew, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 130, 40));

        panelForm.setBackground(new java.awt.Color(255, 255, 255));
        panelForm.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Adding Brand", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DialogInput", 1, 18), new java.awt.Color(255, 255, 0))); // NOI18N
        panelForm.setOpaque(false);
        panelForm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtBrandID.setBackground(new java.awt.Color(255, 255, 255));
        txtBrandID.setFont(new java.awt.Font("Dubai Light", 2, 16)); // NOI18N
        txtBrandID.setForeground(new java.awt.Color(133, 173, 173));
        txtBrandID.setText("BRAND ID*");
        txtBrandID.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 3, 2, new java.awt.Color(0, 0, 0)));
        txtBrandID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBrandIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBrandIDFocusLost(evt);
            }
        });
        panelForm.add(txtBrandID, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 220, 50));

        txtNameBrand.setBackground(new java.awt.Color(255, 255, 255));
        txtNameBrand.setFont(new java.awt.Font("Dubai Light", 2, 16)); // NOI18N
        txtNameBrand.setForeground(new java.awt.Color(133, 173, 173));
        txtNameBrand.setText("BRAND NAME*");
        txtNameBrand.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 3, 2, new java.awt.Color(0, 0, 0)));
        txtNameBrand.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNameBrandFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameBrandFocusLost(evt);
            }
        });
        panelForm.add(txtNameBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 220, 50));

        lbUpdating.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lbUpdating.setForeground(new java.awt.Color(255, 255, 102));
        lbUpdating.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbUpdating.setText("UPDATE");
        panelForm.add(lbUpdating, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 110, 30));

        btUpdating.setBackground(new java.awt.Color(102, 102, 102));
        btUpdating.setForeground(new java.awt.Color(255, 255, 0));
        btUpdating.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\button.png")); // NOI18N
        btUpdating.setBorder(null);
        btUpdating.setBorderPainted(false);
        btUpdating.setContentAreaFilled(false);
        panelForm.add(btUpdating, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 110, 50));

        lbDelete.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lbDelete.setForeground(new java.awt.Color(255, 255, 102));
        lbDelete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDelete.setText("DELETE");
        panelForm.add(lbDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 220, 140, 30));

        btDelete.setBackground(new java.awt.Color(102, 102, 102));
        btDelete.setForeground(new java.awt.Color(255, 255, 0));
        btDelete.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\button.png")); // NOI18N
        btDelete.setBorder(null);
        btDelete.setBorderPainted(false);
        btDelete.setContentAreaFilled(false);
        panelForm.add(btDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 110, 50));

        lbAdding.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lbAdding.setForeground(new java.awt.Color(255, 255, 102));
        lbAdding.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAdding.setText("ADD");
        panelForm.add(lbAdding, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 140, 30));

        btAdding.setBackground(new java.awt.Color(102, 102, 102));
        btAdding.setForeground(new java.awt.Color(255, 255, 0));
        btAdding.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\button.png")); // NOI18N
        btAdding.setBorder(null);
        btAdding.setBorderPainted(false);
        btAdding.setContentAreaFilled(false);
        btAdding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddingActionPerformed(evt);
            }
        });
        panelForm.add(btAdding, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 180, 70));

        add(panelForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 260, 290));

        lbErrorIDEmpty.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbErrorIDEmpty.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorIDEmpty.setText("ID's empty");
        add(lbErrorIDEmpty, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 190, 100, 30));

        lbErrorlID.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbErrorlID.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorlID.setText("ID's invalid");
        add(lbErrorlID, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 190, 100, 30));

        lbErrorNameBrandEmpty.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbErrorNameBrandEmpty.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorNameBrandEmpty.setText("Brand's empty");
        add(lbErrorNameBrandEmpty, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 270, 130, 30));

        lbErrorNameBrand.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbErrorNameBrand.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorNameBrand.setText("Brand's invalid");
        add(lbErrorNameBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 270, 130, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\Image\\logoBrand.png")); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 350, 250, 140));

        lbErrorExisting.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbErrorExisting.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorExisting.setText("Brand's existing");
        add(lbErrorExisting, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 230, 150, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void tbBrandMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBrandMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dtm=(DefaultTableModel)tbBrand.getModel();
                    int index=tbBrand.getSelectedRow();
                    btUpdating.setVisible(false);
                   lbUpdating.setVisible(false);
                   lbDelete.setVisible(false);
                   btDelete.setVisible(false);
        if (evt.getClickCount()==2)
        {   
                   txtBrandID.setEnabled(false);
                   btUpdating.setVisible(false);
                   lbUpdating.setVisible(false);
                   lbDelete.setVisible(false);
                   btDelete.setVisible(false);
                   //SET HIỆN NÚT LÊN
                   btUpdating.setVisible(true);
                   lbUpdating.setVisible(true);
                   lbDelete.setVisible(true);
                   btDelete.setVisible(true);
                   lbAdding.setVisible(false);
                   btAdding.setVisible(false);
                   //SET MÀU CHO TXT
                   txtBrandID.setForeground(Color.black);
                   txtBrandID.setFont(new Font("Diaglog",Font.BOLD,16));
                   txtNameBrand.setForeground(Color.black);
                   txtNameBrand.setFont(new Font("Diaglog",Font.BOLD,16));
            panelForm.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Updating Brand", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DialogInput", 1, 18), new java.awt.Color(51, 51, 0)));
            //Dinh Dang lai Form dang ki
                
            //SET GIÁ TRỊ CHO CÁC TRƯỜNG
            //ID
            String id=String.valueOf(tbBrand.getValueAt(index, 0));
            txtBrandID.setText(String.valueOf(tbBrand.getValueAt(index, 0)));

            //NAME
            txtNameBrand.setText(String.valueOf(tbBrand.getValueAt(index, 1)));
            btUpdating.addActionListener(new ActionListener()
            {
                public void actionPerformed(ActionEvent t)
                {
                
                    int countfull=0;
                    int countvalid=0;
                      //BRAND 
                    boolean checkEmptyNameBrand=true;
                    boolean checkNameBrand=true;
                    boolean checkBrandExisting=true;
                    String name=txtNameBrand.getText().trim().replaceAll("\\s+", " ").toUpperCase();
                    if(name.equals("BRAND NAME*") || name.isEmpty())
                    {
                        countfull++;
                        checkEmptyNameBrand=false;
                    }
                  for (int i=0;i<name.length();i++)
                    {
                        if( name.charAt(i)>=97 && name.charAt(i)<=122)
                        {
                            checkNameBrand=true;
                        }
                        else if( name.charAt(i)>=65 && name.charAt(i)<=90)
                        {
                            checkNameBrand=true;
                        }
                        else if (name.charAt(i)==32)
                        {
                            checkNameBrand=true;
                        }
                        else
                        {
                            countvalid++;
                            checkNameBrand=false;
                        }
                    }
                    //BRAND ID
                    boolean checkEmptyBrandID=true;
                    boolean checkBrandID=true;

                    String idNew=txtBrandID.getText().trim().toUpperCase();
                    if (idNew.equals("BRAND ID*") || idNew.isEmpty())
                    {
                        countfull++;
                        checkEmptyBrandID=false;
                    }
                     else if (idNew.length()>10)
                    {
                        countvalid++;
                        checkBrandID=false;
                    }
                  else
                     {
                  for (int i=0;i<idNew.length()-1;i++)
                    {
                        if( idNew.charAt(i)>=97 && name.charAt(i)<=122)
                        {
                            checkBrandID=true;
                        }
                        else if( idNew.charAt(i)>=65 && name.charAt(i)<=90)
                        {
                            checkBrandID=true;
                        }
                        else if (idNew.charAt(i)==32)
                        {
                            checkBrandID=true;
                        }
                        else
                        {
                            countvalid++;
                            checkBrandID=false;
                        }
                    }
                     }
                     if(checkVadiliteBrandWithUpdate(idNew, name)==true)
                    {
                        checkBrandExisting=false;
                        countvalid++;
                    }
                    //
                  if(countfull!=0 || countvalid!=0)
                  {
                    //ADDRESS ERROR
                     setSize(1000, 660);
                    if(checkEmptyBrandID==false)
                    {
                        lbErrorIDEmpty.setVisible(true);
                        lbErrorlID.setVisible(false);
                    }
                    else if (checkBrandID==false)
                    {
                        lbErrorIDEmpty.setVisible(false);
                        lbErrorlID.setVisible(true);
                   }
                   else
                    {
                        lbErrorlID.setVisible(false);
                        lbErrorIDEmpty.setVisible(false);
                    }
                    //BRAND ERROR
                    if(checkEmptyNameBrand==false)
                    {
                        lbErrorNameBrandEmpty.setVisible(true);
                        lbErrorNameBrand.setVisible(false);
                    }
                    else if(checkNameBrand==false)
                    {
                       lbErrorNameBrandEmpty.setVisible(false);
                        lbErrorNameBrand.setVisible(true);
                    }
                    else
                    {
                       lbErrorNameBrandEmpty.setVisible(false);
                        lbErrorNameBrand.setVisible(false);
                    }
                    if(checkBrandExisting==false)
                    {
                        lbErrorExisting.setVisible(true);
                        
                    }
                    else
                    {
                        lbErrorExisting.setVisible(false);
                    }
                  }
                  else  if(countfull==0 && countvalid==0)
                    {
                        updateBrand(idNew, name, id);
                        JOptionPane.showMessageDialog(null,"SUCCESSFUL","BINGO!",JOptionPane.PLAIN_MESSAGE,new ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\Image\\icons8_good_quality_32.png"));
                        txtBrandID.setText("BRAND ID*");
                         txtNameBrand.setText("BRAND NAME*");
                         txtBrandID.setFont(new Font("Dubai Light", Font.ITALIC, 16));
                         txtBrandID.setForeground(new Color(133,173,173));
                         txtNameBrand.setFont(new Font("Dubai Light", Font.ITALIC, 16));
                         txtNameBrand.setForeground(new Color(133,173,173));
                        lbErrorNameBrandEmpty.setVisible(false);
                        lbErrorIDEmpty.setVisible(false);
                        lbErrorlID.setVisible(false);
                        lbErrorNameBrand.setVisible(false);
                        lbErrorExisting.setVisible(false);
                        
                        getInforBrand();
                        
                    }
                    
                }
            });

         
            

            btDelete.addActionListener(new ActionListener()
                {
                    public void actionPerformed(ActionEvent e)
                    {
                        deleteBrandCart(id);
                        JOptionPane.showMessageDialog(null,"SUCCESSFUL","BINGO!",JOptionPane.PLAIN_MESSAGE,new ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\Image\\icons8_good_quality_32.png"));
                         txtBrandID.setText("BRAND ID*");
                         txtNameBrand.setText("BRAND NAME*");
                         txtBrandID.setFont(new Font("Dubai Light", Font.ITALIC, 16));
                         txtBrandID.setForeground(new Color(133,173,173));
                         txtNameBrand.setFont(new Font("Dubai Light", Font.ITALIC, 16));
                        txtNameBrand.setForeground(new Color(133,173,173));

                       getInforBrand();

                    }
                });
            }
    }//GEN-LAST:event_tbBrandMouseClicked
public void  filterData(String query)
{
    DefaultTableModel dtm= (DefaultTableModel)tbBrand.getModel();
    TableRowSorter<DefaultTableModel> tr= new TableRowSorter<DefaultTableModel>(dtm);
    tbBrand.setRowSorter(tr);
    tr.setRowFilter(RowFilter.regexFilter(query));
}
    private void txtSearchingBrandKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchingBrandKeyReleased
        // TODO add your handling code here:
        String query=txtSearchingBrand.getText().toUpperCase();
        filterData(query);
    }//GEN-LAST:event_txtSearchingBrandKeyReleased

    private void txtBrandIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBrandIDFocusGained
        // TODO add your handling code here:
        if(txtBrandID.getText().trim().toUpperCase().equals("BRAND ID*"))
        {
            txtBrandID.setFont(new Font("Dialog", Font.BOLD, 16));
            txtBrandID.setForeground(new Color(10, 15, 15));
            txtBrandID.setText("");
        }
    }//GEN-LAST:event_txtBrandIDFocusGained

    private void txtBrandIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBrandIDFocusLost
        // TODO add your handling code here:
        if(txtBrandID.getText().trim().toUpperCase().equals(""))
        {
            txtBrandID.setFont(new Font("Dubai Light", Font.ITALIC, 16));
            txtBrandID.setForeground(new Color(133,173,173));
            txtBrandID.setText("BRAND ID*");
        }
    }//GEN-LAST:event_txtBrandIDFocusLost

    private void txtNameBrandFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameBrandFocusGained
        // TODO add your handling code here:
        if(txtNameBrand.getText().trim().toUpperCase().equals("BRAND NAME*"))
        {
            txtNameBrand.setFont(new Font("Dialog", Font.BOLD, 16));
            txtNameBrand.setForeground(new Color(10, 15, 15));
            txtNameBrand.setText("");
        }
    }//GEN-LAST:event_txtNameBrandFocusGained

    private void txtNameBrandFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameBrandFocusLost
        // TODO add your handling code here:
        if(txtNameBrand.getText().trim().toUpperCase().equals(""))
        {
            txtNameBrand.setFont(new Font("Dubai Light", Font.ITALIC, 16));
            txtNameBrand.setForeground(new Color(133,173,173));
            txtNameBrand.setText("BRAND NAME*");
        }
    }//GEN-LAST:event_txtNameBrandFocusLost

    private void btAddingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddingActionPerformed
        // TODO add your handling code here:
                    int countfull=0;
                    int countvalid=0;
                      //BRAND 
                    boolean checkEmptyNameBrand=true;
                    boolean checkNameBrand=true;
                    boolean checkBrandExisting=true;
                    
                    String name=txtNameBrand.getText().trim().toUpperCase();
                    if(name.equals("BRAND NAME*") || name.isEmpty())
                    {
                        countfull++;
                        checkEmptyNameBrand=false;
                    }
                    for (int i=0;i<name.length()-1;i++)
                       {
                        if( name.charAt(i)>=65 && name.charAt(i)<=90)
                        {
                            checkNameBrand=true;
                        }
                        else if (name.charAt(i)==32)
                        {
                            checkNameBrand=true;
                        }
                        else
                        {
                            countvalid++;
                            checkNameBrand=false;
                        }
                    }

            
                    //BRAND ID
                    boolean checkEmptyBrandID=true;
                    boolean checkBrandID=true;

                    String idNew=txtBrandID.getText().trim().toUpperCase();
                    if (idNew.equals("BRAND ID*") || idNew.isEmpty())
                    {
                        countfull++;
                        checkEmptyBrandID=false;
                    }
                   else if (idNew.length()>10)
                    {
                        countvalid++;
                        checkBrandID=false;
                    }
                   else
                   {
                    for (int i=0;i<idNew.length()-1;i++)
                    {
                        if( idNew.charAt(i)>=65 && idNew.charAt(i)<=90)
                        {
                            checkBrandID=true;
                        }
                        else if (idNew.charAt(i)==32)
                        {
                            checkBrandID=true;
                        }
                        else
                        {
                            countvalid++;
                            checkBrandID=false;
                        }
                    }
                   }
                    if(checkVadiliteBrand(idNew, name)==true)
                    {
                        checkBrandExisting=false;
                        countvalid++;
                    }
                    //Date
                  if(countfull!=0 || countvalid!=0)
                  {

                     setSize(1000, 660);
                    if(checkEmptyBrandID==false)
                    {
                        lbErrorIDEmpty.setVisible(true);
                        lbErrorlID.setVisible(false);
                    }
                    else if (checkBrandID==false)
                    {
                        lbErrorIDEmpty.setVisible(false);
                        lbErrorlID.setVisible(true);
                   }
                   else
                    {
                        lbErrorlID.setVisible(false);
                        lbErrorIDEmpty.setVisible(false);
                    }
                    //BRAND ERROR
                    if(checkEmptyNameBrand==false)
                    {
                        lbErrorNameBrandEmpty.setVisible(true);
                        lbErrorNameBrand.setVisible(false);
                    }
                    else if(checkNameBrand==false)
                    {
                       lbErrorNameBrandEmpty.setVisible(false);
                        lbErrorNameBrand.setVisible(true);
                    }
                    else
                    {
                       lbErrorNameBrandEmpty.setVisible(false);
                        lbErrorNameBrand.setVisible(false);
                    }
                    if(checkBrandExisting==false)
                    {
                        lbErrorExisting.setVisible(true);
                        
                    }
                    else
                    {
                        lbErrorExisting.setVisible(false);
                    }
                  }
                  else  if(countfull==0 && countvalid==0)
                    {
                        createBrandCart(idNew, name);
                        JOptionPane.showMessageDialog(null,"SUCCESSFUL","BINGO!",JOptionPane.PLAIN_MESSAGE,new ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\Image\\icons8_good_quality_32.png"));
                        txtBrandID.setText("BRAND ID*");
                         txtNameBrand.setText("BRAND NAME*");
                         txtBrandID.setFont(new Font("Dubai Light", Font.ITALIC, 16));
                         txtBrandID.setForeground(new Color(133,173,173));
                         txtNameBrand.setFont(new Font("Dubai Light", Font.ITALIC, 16));
                         txtNameBrand.setForeground(new Color(133,173,173));
                        lbErrorNameBrandEmpty.setVisible(false);
                        lbErrorIDEmpty.setVisible(false);
                        lbErrorlID.setVisible(false);
                        lbErrorExisting.setVisible(false);
                        lbErrorNameBrand.setVisible(false);
                        getInforBrand();
                        
                    }
//                    else
//                    {
//                        
//                    }

                   

    }//GEN-LAST:event_btAddingActionPerformed

    private void btAddnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddnewActionPerformed
        // TODO add your handling code here:
                   btUpdating.setVisible(false);
                   lbUpdating.setVisible(false);
                   lbDelete.setVisible(false);
                   btDelete.setVisible(false);
                   lbAdding.setVisible(true);
                   btAdding.setVisible(true);
                   panelForm.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Adding Brand", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DialogInput", 1, 18), new java.awt.Color(255, 255, 0)));
                            //NAME
           txtBrandID.setFont(new Font("Dubai Light", Font.ITALIC, 16));
           txtBrandID.setForeground(new Color(133,173,173));
           txtBrandID.setText("BRAND ID*"); 
        
           //USERNAME
           txtNameBrand.setFont(new Font("Dubai Light", Font.ITALIC, 16));
           txtNameBrand.setForeground(new Color(133,173,173));
           txtNameBrand.setText("BRAND NAME*");   


                   
    }//GEN-LAST:event_btAddnewActionPerformed
 public void getInforBrand()
    {
        DefaultTableModel dtm=(DefaultTableModel)tbBrand.getModel();
        dtm.setRowCount(0);
        tbBrand.setModel(dtm);
        tbBrand.getColumnModel().getColumn(0).setPreferredWidth(10);
        tbBrand.getColumnModel().getColumn(1).setPreferredWidth(300);
        tbBrand.setRowHeight(30);
        tbBrand.setAutoResizeMode(tbBrand.AUTO_RESIZE_LAST_COLUMN);
        Connection c=Connecting.Connect();
        String sql="Select * from HangXe";
        Vector v;
        try {
            PreparedStatement pr=c.prepareStatement(sql);
            ResultSet rs=pr.executeQuery();
            while(rs.next())
            {
                v=new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                dtm.addRow(v);
            }
           tbBrand.setModel(dtm);
            rs.close();
            pr.close();
            c.close();
        } catch (SQLException ex) {
            System.out.println("HELLO");
        }
        
    }
  public void deleteBrandCart(String id)
     {
         Connection c=Connect();
         String sql="delete from HangXe where MAHANG=?";
         PreparedStatement pr;
    try {
         pr = c.prepareStatement(sql);
         pr.setString(1, id);
            pr.executeUpdate();
            pr.close();
            c.close();
    } catch (SQLException ex) {
        System.out.print("HELLO");
    }
     }         
   private void updateBrand(String StringIDnew,String brand,String id)
 {
   Connection c=Connect();
   String sql="update HangXe set MAHANG=?,TENHANG=? where MAHANG=?";
        try {
            PreparedStatement pr=c.prepareStatement(sql);
            pr.setString(1, StringIDnew);
            pr.setString(2, brand);
            pr.setString(3, id);
            pr.executeUpdate();
            pr.close();
            c.close();
        } catch (SQLException ex) {
           System.out.print("HELLO");
        }
 }
   public boolean checkVadiliteBrand(String brandID, String brandName)
   {
       setCheck(false);
       try {
            Connection c=Connect();
            String sql="Select MAHANG,TENHANG from HangXe ";
            PreparedStatement pr=c.prepareStatement(sql);
            ResultSet rs=pr.executeQuery();
            while(rs.next())
            {
                if(rs.getString(1).equals(brandID)||rs.getString(2).equals(brandName))
                {
                    setCheck(true);
                    break;
                }
            }
        } catch (SQLException ex) {
           
        }
       return isCheck();
   }
      public boolean checkVadiliteBrandWithUpdate(String brandID, String brandName)
   {
       setCheck(false);
       try {
            Connection c=Connect();
            String sql="Select TENHANG from HangXe where  NOT TENHANG='"+brandName+"'";
            PreparedStatement pr=c.prepareStatement(sql);
            ResultSet rs=pr.executeQuery();
            while(rs.next())
            {
                if(rs.getString(1).equals(brandName))
                {
                    setCheck(true);
                    break;
                }
            }
        } catch (SQLException ex) {
           
        }
       return isCheck();
   }
     private void createBrandCart(String BrandID,String brandName)
    {
        try {
            Connection connect=Connect();
            String sql1=" insert into HangXe values (?,?)";
            PreparedStatement pr1=connect.prepareStatement(sql1);
            pr1.setString(1, BrandID);
            pr1.setString(2, brandName);
            pr1.executeUpdate();
            pr1.close();
            connect.close();
        } catch (SQLException ex) {
            
        }
    }
  public  String changeBrandIDIntoBrandName(String BrandID)
    {
        try {
            Connection connect=Connect();
            String sql1=" select TENHANG from HangXe where MAHANG='"+BrandID+"'";
            PreparedStatement pr1=connect.prepareStatement(sql1);
            ResultSet rs1=pr1.executeQuery();
            while(rs1.next())
            {
                setEverything(rs1.getString(1));
            }
            rs1.close();
            pr1.close();
            connect.close();
        } catch (SQLException ex) {
            
        }
        return getEverything();
    }
  public  String changeBrandNameIntoBrandID(String brandName)
    {
        try {
            Connection connect=Connect();
            String sql1=" select MAHANG from HangXe where TENHANG='"+brandName+"'";
            PreparedStatement pr1=connect.prepareStatement(sql1);
            ResultSet rs1=pr1.executeQuery();
            while(rs1.next())
            {
                setEverything(rs1.getString(1));
            }
            rs1.close();
            pr1.close();
            connect.close();
        } catch (SQLException ex) {
            
        }
        return getEverything();
    }
   public static void main(String args[]) {
       JFrame a=new JFrame();
       updateBrandCart t=new updateBrandCart();
       a.add(t);
              a.pack();
       a.setVisible(true);
       
    
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btAdding;
    private javax.swing.JButton btAddnew;
    public javax.swing.JButton btDelete;
    public javax.swing.JButton btUpdating;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JLabel lbAdding;
    public javax.swing.JLabel lbDelete;
    private javax.swing.JLabel lbErrorExisting;
    private javax.swing.JLabel lbErrorIDEmpty;
    private javax.swing.JLabel lbErrorNameBrand;
    private javax.swing.JLabel lbErrorNameBrandEmpty;
    private javax.swing.JLabel lbErrorlID;
    private javax.swing.JLabel lbSearching;
    public javax.swing.JLabel lbUpdating;
    private javax.swing.JPanel panelForm;
    private javax.swing.JTable tbBrand;
    public javax.swing.JTextField txtBrandID;
    public javax.swing.JTextField txtNameBrand;
    private javax.swing.JTextField txtSearchingBrand;
    // End of variables declaration//GEN-END:variables
}
