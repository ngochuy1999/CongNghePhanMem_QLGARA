/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cnpm;

import static cnpm.Connecting.Connect;
import java.sql.ResultSet;
import java.sql.Connection;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.processing.Messager;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sourceforge.jdatepicker.impl.JDatePanelImpl;
import net.sourceforge.jdatepicker.impl.JDatePickerImpl;
import net.sourceforge.jdatepicker.impl.UtilDateModel;


/**
 *
 * @author USER
 */
public class AddAccessoryForCar extends javax.swing.JFrame {
boolean check;

    public boolean isCheck() {
        return check;
    }

    public void setCheck(boolean check) {
        this.check = check;
    }
    public AddAccessoryForCar() {
    initComponents();
            //Ban đầu cho các lb ẩn
         getComboBoxNameAccessoriWithUpdate();
        lbErrorPriceValid.setVisible(false);
        //Set nut update an
        btUpdate.setVisible(false);
        lbUpdate.setVisible(false);
        btDelete.setVisible(false);
        lbDelete.setVisible(false);
        txtPrice.setEditable(false);
        txtPrice.setForeground(Color.black);
        this.setSize(390,395);
   this.getContentPane().setBackground(new Color(209, 209, 224));
    this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelBackground = new javax.swing.JPanel();
        panelRegister = new javax.swing.JPanel();
        lbUpdate = new javax.swing.JLabel();
        lbAdding = new javax.swing.JLabel();
        btAdding = new javax.swing.JButton();
        lbDelete = new javax.swing.JLabel();
        btDelete = new javax.swing.JButton();
        txtMinimize = new javax.swing.JLabel();
        txtExit = new javax.swing.JLabel();
        btUpdate = new javax.swing.JButton();
        cbAccessoriName = new javax.swing.JComboBox<>();
        txtPrice = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        lbErrorPriceValid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setUndecorated(true);
        setOpacity(0.95F);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelBackground.setBackground(new java.awt.Color(255, 255, 255));
        panelBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRegister.setBackground(new java.awt.Color(51, 51, 51));
        panelRegister.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black), "Add Accessories", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 24), new java.awt.Color(255, 255, 102))); // NOI18N
        panelRegister.setPreferredSize(new java.awt.Dimension(250, 530));
        panelRegister.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbUpdate.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lbUpdate.setForeground(new java.awt.Color(255, 255, 102));
        lbUpdate.setText("UPDATE");
        panelRegister.add(lbUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, 120, 30));

        lbAdding.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lbAdding.setForeground(new java.awt.Color(255, 255, 102));
        lbAdding.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAdding.setText("ADD");
        panelRegister.add(lbAdding, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 140, 30));

        btAdding.setBackground(new java.awt.Color(102, 102, 102));
        btAdding.setForeground(new java.awt.Color(255, 255, 0));
        btAdding.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\button.png")); // NOI18N
        btAdding.setBorder(null);
        btAdding.setBorderPainted(false);
        btAdding.setContentAreaFilled(false);
        panelRegister.add(btAdding, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 180, 70));

        lbDelete.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lbDelete.setForeground(new java.awt.Color(255, 255, 102));
        lbDelete.setText("DELETE");
        panelRegister.add(lbDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, 120, 30));

        btDelete.setBackground(new java.awt.Color(102, 102, 102));
        btDelete.setForeground(new java.awt.Color(255, 255, 0));
        btDelete.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\button.png")); // NOI18N
        btDelete.setBorder(null);
        btDelete.setBorderPainted(false);
        btDelete.setContentAreaFilled(false);
        panelRegister.add(btDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 170, 70));

        txtMinimize.setBackground(new java.awt.Color(51, 51, 51));
        txtMinimize.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        txtMinimize.setForeground(new java.awt.Color(255, 255, 102));
        txtMinimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtMinimize.setText("-");
        txtMinimize.setOpaque(true);
        txtMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMinimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtMinimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtMinimizeMouseExited(evt);
            }
        });
        panelRegister.add(txtMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 30, 20));

        txtExit.setBackground(new java.awt.Color(51, 51, 51));
        txtExit.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        txtExit.setForeground(new java.awt.Color(255, 255, 102));
        txtExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtExit.setText("x");
        txtExit.setOpaque(true);
        txtExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtExitMouseExited(evt);
            }
        });
        panelRegister.add(txtExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 40, 20));

        btUpdate.setBackground(new java.awt.Color(102, 102, 102));
        btUpdate.setForeground(new java.awt.Color(255, 255, 0));
        btUpdate.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\Môn Lớp\\Kĩ Thuật phần mềm\\button.png")); // NOI18N
        btUpdate.setBorder(null);
        btUpdate.setBorderPainted(false);
        btUpdate.setContentAreaFilled(false);
        panelRegister.add(btUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 180, 70));

        cbAccessoriName.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        cbAccessoriName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAccessoriNameActionPerformed(evt);
            }
        });
        panelRegister.add(cbAccessoriName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 360, 50));

        txtPrice.setBackground(new java.awt.Color(255, 255, 255));
        txtPrice.setFont(new java.awt.Font("Dubai Light", 3, 24)); // NOI18N
        txtPrice.setForeground(new java.awt.Color(0, 0, 0));
        txtPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 3, 2, new java.awt.Color(0, 0, 0)));
        panelRegister.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 360, 50));

        txtQuantity.setBackground(new java.awt.Color(255, 255, 255));
        txtQuantity.setFont(new java.awt.Font("Dubai Light", 2, 16)); // NOI18N
        txtQuantity.setForeground(new java.awt.Color(133, 173, 173));
        txtQuantity.setText("QUANTITY*");
        txtQuantity.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 3, 2, new java.awt.Color(0, 0, 0)));
        txtQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantityFocusLost(evt);
            }
        });
        panelRegister.add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 360, 50));

        panelBackground.add(panelRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 430));

        lbErrorPriceValid.setFont(new java.awt.Font("DialogInput", 3, 16)); // NOI18N
        lbErrorPriceValid.setForeground(new java.awt.Color(255, 51, 51));
        lbErrorPriceValid.setToolTipText("");
        panelBackground.add(lbErrorPriceValid, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, 150, -1));

        getContentPane().add(panelBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 430));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtExitMouseExited
        // TODO add your handling code here:
        txtExit.setBackground(new Color(51,51,51));
    }//GEN-LAST:event_txtExitMouseExited

    private void txtExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtExitMouseEntered
        // TODO add your handling code here:
        txtExit.setBackground(new Color(200, 0,0));
    }//GEN-LAST:event_txtExitMouseEntered

    private void txtExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtExitMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_txtExitMouseClicked

    private void txtMinimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMinimizeMouseExited
        // TODO add your handling code here:
        txtMinimize.setBackground(new Color(51,51,51));
    }//GEN-LAST:event_txtMinimizeMouseExited

    private void txtMinimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMinimizeMouseEntered
        // TODO add your handling code here:
        txtMinimize.setBackground(new Color(200, 0,0));
    }//GEN-LAST:event_txtMinimizeMouseEntered

    private void txtMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMinimizeMouseClicked
        // TODO add your handling code here:
        setState(this.ICONIFIED);
    }//GEN-LAST:event_txtMinimizeMouseClicked

    private void cbAccessoriNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAccessoriNameActionPerformed
        // TODO add your handling code here:
        getAccesooriesPrice(String.valueOf(cbAccessoriName.getEditor().getItem()));
    }//GEN-LAST:event_cbAccessoriNameActionPerformed

    private void txtQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantityFocusGained
        // TODO add your handling code here:
        if(txtQuantity.getText().trim().toUpperCase().equals("QUANTITY*"))
        {
            txtQuantity.setFont(new Font("Dialog", Font.BOLD, 16));
            txtQuantity.setForeground(new Color(10, 15, 15));
            txtQuantity.setText("");
        }
    }//GEN-LAST:event_txtQuantityFocusGained

    private void txtQuantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantityFocusLost
        // TODO add your handling code here:
        if(txtQuantity.getText().trim().toUpperCase().equals(""))
        {
            txtQuantity.setFont(new Font("Dubai Light", Font.ITALIC, 16));
            txtQuantity.setForeground(new Color(133,173,173));
            txtQuantity.setText("QUANTITY*");
        }
    }//GEN-LAST:event_txtQuantityFocusLost
                    
    /**
     * @param args the command line arguments
     */
    public void getComboBoxNameAccessori()
    {
        try {
            Connection connect=Connect();
            String sql=" select TENLK from LinhKien";
            PreparedStatement pr=connect.prepareStatement(sql);
            ResultSet rs=pr.executeQuery();
            while(rs.next())
            {

                cbAccessoriName.addItem(rs.getString(1));
                
            }
            pr.close();
            connect.close();
        } catch (SQLException ex) {
            Logger.getLogger(RegisterMember.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        public void getComboBoxNameAccessoriWithUpdate()
    {
        try {
            Connection connect=Connect();
            String sql=" select TENLK, SOLUONG from LinhKien";
            PreparedStatement pr=connect.prepareStatement(sql);
            ResultSet rs=pr.executeQuery();
            cbAccessoriName.removeAllItems();
            while(rs.next())
            {
                if(!rs.getString(2).equals("0"))
                {
                    
                cbAccessoriName.addItem(rs.getString(1));
                }
                
            }
            pr.close();
            connect.close();
        } catch (SQLException ex) {
            Logger.getLogger(RegisterMember.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
         public boolean checkAccessoryForCar(String idCar)
  {
      
        try {
            setCheck(false);
            Connection connect=Connect();
            String sql=" select MAXE from ChiTietLinhKien ";
            PreparedStatement pr=connect.prepareStatement(sql);
            ResultSet rs=pr.executeQuery();
            while(rs.next())
            {
                if(rs.getString(1).equals(idCar))
                {
                setCheck(true);
                break;
                }
 
            }
            pr.close();
            connect.close();
        } catch (SQLException ex) {
            Logger.getLogger(RegisterMember.class.getName()).log(Level.SEVERE, null, ex);
        }
      return isCheck();
  }
  public void getAccesooriesPrice(String idAccessories)
  {
              try {
            Connection connect=Connect();
            String sql=" select DONGIA from LinhKien Where TENLK like N'%"+idAccessories+"%'";
            PreparedStatement pr=connect.prepareStatement(sql);
            ResultSet rs=pr.executeQuery();
            while(rs.next())
            {
                txtPrice.setText(rs.getString(1));
            }
            pr.close();
            connect.close();
        } catch (SQLException ex) {
            Logger.getLogger(RegisterMember.class.getName()).log(Level.SEVERE, null, ex);
        }
      
      
  }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAccessoryForCar().setVisible(true);
            }
        });
    }
//    public  String getQuantityFromStock(String idAccessories)
//    {
//          try {
//            Connection connect=Connect();
//            String sql=" select SOLUONG from LinhKien Where '%"+idAccessories+"%'";
//            PreparedStatement pr=connect.prepareStatement(sql);
//            ResultSet rs=pr.executeQuery();
//            while(rs.next())
//            {
//                txtPrice.setText(rs.getString(1));
//            }
//            pr.close();
//            connect.close();
//        } catch (SQLException ex) {
//            Logger.getLogger(RegisterMember.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btAdding;
    public javax.swing.JButton btDelete;
    public javax.swing.JButton btUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    public javax.swing.JComboBox<String> cbAccessoriName;
    public javax.swing.JLabel lbAdding;
    public javax.swing.JLabel lbDelete;
    public javax.swing.JLabel lbErrorPriceValid;
    public javax.swing.JLabel lbUpdate;
    private javax.swing.JPanel panelBackground;
    public javax.swing.JPanel panelRegister;
    public javax.swing.JLabel txtExit;
    private javax.swing.JLabel txtMinimize;
    public javax.swing.JTextField txtPrice;
    public javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
